<?php

/**
 * @file
 * Contains eba.module..
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Render\Element;
use Drupal\Core\Entity\ContentEntityType;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
use Drupal\eba\Helpers\AttachedBlocks;

/**
 * Implements hook_help().
 */
function eba_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the eba module.
    case 'help.page.eba':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Attach a block to an entity bundle') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function eba_form_block_form_alter(&$form, FormStateInterface $form_state) {
  /** @var \Drupal\block\Entity\Block $block */
  $block = $form_state->getFormObject()->getEntity();
  $bundle_config = $block->getThirdPartySetting('eba', 'bundles');
  $respect_visibility = $block->getThirdPartySetting('eba', 'respect_visibility');

  $entity_info = \Drupal::entityManager()->getDefinitions();
  foreach ($entity_info as $entity_type => $entity_type_info) {
    if ($entity_type_info instanceof ContentEntityType) {
      $entity_type_label = $entity_type_info->get('label');

      $potential_element = [
        '#type' => 'checkboxes',
        '#title' => $entity_type_label,
        '#options' => [],
        '#default_value' => isset($bundle_config[$entity_type]) ? $bundle_config[$entity_type] : [],
      ];

      foreach (\Drupal::entityManager()->getBundleInfo($entity_type) as $bundle => $bundle_info) {
        // need some access checks but skipping for now
        $potential_element['#options'][$bundle] = $bundle_info['label'];
      }

      if (!empty($potential_element['#options'])) {
        $parent_element[$entity_type] = $potential_element;
      }
    }
  }

  // If there were no allowed options then do not make changes to the form.
  $children = Element::children($parent_element);
  if (!empty($children)) {
    $form['third_party_settings']['eba'] = [
      '#type' => 'fieldset',
      '#title' => t('Entity Block Attachment'),
    ];
    $form['third_party_settings']['eba']['bundles'] = $parent_element;

    $form['third_party_settings']['eba']['respect_visibility'] = array(
      '#type' => 'checkbox',
      '#title' => t('Respect block visibility settings'),
      '#default_value' => $respect_visibility,
      '#description' => t('Only display the block on entities if it is not restricted by other visibility settings.'),
    );
  }
}

/**
 * Implements hook_entity_extra_field_info()
 */
function eba_entity_extra_field_info() {
  $extra = [];
  $blocks = AttachedBlocks::getAllAttached();

  foreach ($blocks as $id => $data) {
    foreach ($data as $entity => $bundles) {
      foreach ($bundles as $bundle) {
        $extra[$entity][$bundle]['display'][AttachedBlocks::getFieldName($id)] = [
          'label' => AttachedBlocks::getFieldLabel($id),
          'description' => AttachedBlocks::getFieldDescription($id),
          'weight' => 10,
        ];
      }
    }
  }

  return $extra;
}

/**
 * Implements hook_entity_view()
 */
function eba_entity_view(array &$build, EntityInterface $entity, EntityViewDisplayInterface $display, $view_mode) {
  if ($entity) {
    $type = $entity->getEntityTypeId();
    $bundle = $entity->bundle();
    
    if ($blocks = AttachedBlocks::getAttachedTo($type, $bundle)) {
      foreach ($blocks as $id => $element) {
        if (!empty($element)) {
          $build[AttachedBlocks::getFieldName($id)][] = $element;
        }
      }
    }
  }
}
